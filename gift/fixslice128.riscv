# s0 - s3 : plaintext
# a0 - a3 : key
# s4 : round constant address
# s5 : while counter
# a4, a5 : temporary key holders

.macro RightShift dst, src, mask, shift
	li t0, \mask
	and t0, \src, t0
	srl t0, t0, \shift
	or \dst, \dst, t0
.endm

.macro LeftShift dst, src, mask, shift
	li t0, \mask
	and t0, \src, t0
	sll t0, t0, \shift
	or \dst, \dst, t0
.endm

.macro Transpose32_8 dst, src
	li t0, 0xaa55aa55
	and t1, \src, t0
	RightShift t1, \src, 0x55005500, 7
	LeftShift t1, \src, 0x00aa00aa, 7

	li t0, 0xcccc3333
	and t2, t1, t0
	RightShift t2, t1, 0x33330000, 14
	LeftShift t2, t1, 0x0000cccc, 14

	li t0, 0xf000000f
	and \dst, t2, t0
	RightShift \dst, t2, 0x0f000000, 12
	LeftShift \dst, t2,  0x00f00000, 4
	RightShift \dst, t2, 0x000f0000, 8
	LeftShift \dst, t2,  0x0000f000, 8
	RightShift \dst, t2, 0x00000f00, 4
	LeftShift \dst, t2,  0x000000f0, 12
.endm

.macro Transpose32_4 dst, src	
	li t0, 0xf000000f
	and t1, \src, t0
	RightShift t1, \src, 0x0f000000, 4
	RightShift t1, \src,  0x00f00000, 8
	RightShift t1, \src, 0x000f0000, 12
	LeftShift t1, \src,  0x0000f000, 12
	LeftShift t1, \src, 0x00000f00, 8
	LeftShift t1, \src,  0x000000f0, 4

	li t0, 0xcccc3333
	and t2, t1, t0
	RightShift t2, t1, 0x33330000, 14
	LeftShift t2, t1, 0x0000cccc, 14

	li t0, 0xaa55aa55
	and \dst, t2, t0
	RightShift \dst, t2, 0x55005500, 7
	LeftShift \dst, t2, 0x00aa00aa, 7
.endm

.macro SubCells x0, x1, x2, x3
    and t0, \x0, \x2
	xor \x1, \x1, t0 # x[1] = x[1] XOR (x[0] AND x[2])
	and t0, \x1, \x3
	xor t0, \x0, t0 # t = x[0] XOR (x[1] AND x[3])
	or t1, t0, \x1
	xor \x2, \x2, t1 # x[2] = x[2] XOR (t OR x[1])
	xor \x0, \x3, \x2 # x[0] = x[3] XOR x[2]
	xor \x1, \x1, \x0 # x[1] = x[1] XOR x[0]
	not \x0, \x0 # x[0] = NOT x[0]
	and t1, t0, \x1 
	xor \x2, \x2, t1 # x[2] = x[2] XOR (t AND x[1])
	mv \x3, t0 # x[3] = t
.endm

.macro RotateKeys
	mv t0, a0
	mv a0, a1
	mv a1, a2
	mv a2, a3
	mv a3, t0
.endm

.macro UpdateKey # k0 = k0 >> 12 ; k1 = k1 >> 2
	li t0, 0xfffc0000 # update k1
	and t0, a0, t0
	li t1, 0x00030000
	and t1, a0, t1
	srl t0, t0, 2
	sll t1, t1, 14
	or t0, t0, t1

	li t1, 0x0000f000 # update k0
	and t1, a0, t1
	li t2, 0x00000fff
	and t2, a0, t2
	srl t1, t1, 12
	sll t2, t2, 4
	or t1, t1, t2

	or a0, t0, t1 # store k1||k0
.endm

.section .text
	.globl main
	
	main:
		la t0, encrypt
		jalr zero, 0(t0)

.section .itim,"ax",@progbits
	.globl encrypt

	encrypt:

		csrr s9, mcycle # MEASUREMENT

		la s4, const # round constant

		la t0, txt2_e # load plaintext
		lw s0, 0(t0) # Slice 0
		lw s1, 4(t0) # Slice 1
		lw s2, 8(t0) # Slice 2
		lw s3, 12(t0) # Slice 3

		la t0, key2 # load key
		lw a0, 12(t0) # k1||k0
		lw a1, 8(t0) # k3||k2
		lw a2, 4(t0) # k5||k4
		lw a3, 0(t0) # k7||k6

		li s5, 8
		DO:
			#+++SUBROUND 1+++
			SubCells s0, s1, s2, s3
			#---PermBits---

			li t5, 0x11111111
			li t6, 0x77777777
			#-----Slice 0-----
			and t0, s0, t5 # mask 0x11111111
			sll t0, t0, 3 # << 3
			srl s0, s0, 1 # >> 1
			and s0, s0, t6 # clean space for t0
			or s0, s0, t0

			#-----Slice 1-----
			li t2, 0x33333333
			and t0, s1, t2 # mask 0x33333333
			sll t0, t0, 2 # << 2
			srl s1, s1, 2 # >> 2
			and s1, s1, t2 # clean space for t0
			or s1, s1, t0

			#-----Slice 2-----
			and t0, s2, t6 # mask 0x77777777
			sll t0, t0, 1 # << 1
			srl s2, s2, 3 # >> 3
			and s2, s2, t5 # clean space for t0
			or s2, s2, t0


			#---AddRoundKey---

			Transpose32_8 a4, a0
			mv a5, zero
			RightShift a5, a4, 0x44444444, 1
			RightShift a5, a4, 0x88888888, 3
			LeftShift a5, a4, 0x11111111, 3
			LeftShift a5, a4, 0x22222222, 1
			xor s1, s1, a5 # add k1||k0 to slice 1

			Transpose32_8 a4, a2
			mv a5, zero
			RightShift a5, a4, 0x44444444, 1
			RightShift a5, a4, 0x88888888, 3
			LeftShift a5, a4, 0x11111111, 3
			LeftShift a5, a4, 0x22222222, 1
			xor s2, s2, a5 # add k5||k4 to slice 2 

			lw t0, 0(s4) # load round constant
			xor s3, s3, t0 # apply round constant 

			#---Key Scheduler---
			add s4, s4, 4 # increment round constant

			UpdateKey
			RotateKeys
			
			#+++SUBROUND 2+++
			SubCells s0, s1, s2, s3

			#---PermBits---
			#-----Slice 0-----
			li t0, 0xfff0fff0
			and t0, s0, t0
			li t1, 0x000f000f
			and t1, s0, t1
			srl t0, t0, 4
			sll t1, t1, 12
			or s0, t0, t1

			#-----Slice 1-----
			li t0, 0xff00ff00
			and t0, s1, t0
			li t1, 0x00ff00ff
			and t1, s1, t1
			srl t0, t0, 8
			sll t1, t1, 8
			or s1, t0, t1 

			#-----Slice 2-----
			li t0, 0xf000f000
			and t0, s2, t0
			li t1, 0x0fff0fff
			and t1, s2, t1
			srl t0, t0, 12
			sll t1, t1, 4
			or s2, t0, t1

			#---AddRoundKey---

			li a5, 0x00200400
			and a5, a0, a5
			LeftShift  a5, a0, 0x00000002, 30
			RightShift a5, a0, 0x00801000, 3
			LeftShift  a5, a0, 0x00000008, 27
			RightShift a5, a0, 0x02004000, 6
			LeftShift  a5, a0, 0x00000020, 24
			RightShift a5, a0, 0x08010000, 9
			LeftShift  a5, a0, 0x00000080, 21
			RightShift a5, a0, 0x20040000, 12
			LeftShift  a5, a0, 0x00000200, 18
			RightShift a5, a0, 0x80100000, 15
			LeftShift  a5, a0, 0x00000801, 15
			RightShift a5, a0, 0x00400000, 18
			LeftShift  a5, a0, 0x00002004, 12
			RightShift a5, a0, 0x01000000, 21
			LeftShift  a5, a0, 0x00008010, 9
			RightShift a5, a0, 0x04000000, 24
			LeftShift  a5, a0, 0x00020040, 6
			RightShift a5, a0, 0x10000000, 27
			LeftShift  a5, a0, 0x00080100, 3
			RightShift a5, a0, 0x40000000, 30

			xor s1, s1, a5 # add k1||k0 to slice 1
			
			li a5, 0x00200400
			and a5, a2, a5
			LeftShift  a5, a2, 0x00000002, 30
			RightShift a5, a2, 0x00801000, 3
			LeftShift  a5, a2, 0x00000008, 27
			RightShift a5, a2, 0x02004000, 6
			LeftShift  a5, a2, 0x00000020, 24
			RightShift a5, a2, 0x08010000, 9
			LeftShift  a5, a2, 0x00000080, 21
			RightShift a5, a2, 0x20040000, 12
			LeftShift  a5, a2, 0x00000200, 18
			RightShift a5, a2, 0x80100000, 15
			LeftShift  a5, a2, 0x00000801, 15
			RightShift a5, a2, 0x00400000, 18
			LeftShift  a5, a2, 0x00002004, 12
			RightShift a5, a2, 0x01000000, 21
			LeftShift  a5, a2, 0x00008010, 9
			RightShift a5, a2, 0x04000000, 24
			LeftShift  a5, a2, 0x00020040, 6
			RightShift a5, a2, 0x10000000, 27
			LeftShift  a5, a2, 0x00080100, 3
			RightShift a5, a2, 0x40000000, 30

			xor s2, s2, a5 # add k5||k4 to slice 2 

			lw t0, 0(s4) # load round constant
			xor s3, s3, t0 # apply round constant 

			#---Key Scheduler---
			add s4, s4, 4 # increment round constant

			UpdateKey
			RotateKeys

			#+++SUBROUND 3+++
			SubCells s0, s1, s2, s3

			#---PermBits---
			#-----Slice 0-----
			mv a4, zero
			LeftShift a4, s0, 0x00005555, 17
			RightShift a4, s0, 0xffff0000, 16
			LeftShift a4, s0, 0x0000aaaa, 15
			mv s0, a4
			#-----Slice 1-----
			mv a4, zero
			RightShift a4, s1, 0xaaaaaaaa, 1
			LeftShift a4, s1, 0x55555555, 1
			mv s1, a4
			#-----Slice 2-----
			mv a4, zero
			RightShift a4, s2, 0x55550000, 15
			LeftShift a4, s2, 0x0000ffff, 16
			RightShift a4, s2, 0xaaaa0000, 17
			mv s2, a4

			#---AddRoundKey---

			li t0, 0x00200400
			and a4, a0, t0

			LeftShift  a4, a0, 0x00000001, 30
			RightShift a4, a0, 0x00400800, 3
			LeftShift  a4, a0, 0x00000002, 27
			RightShift a4, a0, 0x00801000, 6
			LeftShift  a4, a0, 0x00000004, 24
			RightShift a4, a0, 0x01002000, 9
			LeftShift  a4, a0, 0x00000008, 21
			RightShift a4, a0, 0x02004000, 12
			LeftShift  a4, a0, 0x00000010, 18
			RightShift a4, a0, 0x04008000, 15
			LeftShift  a4, a0, 0x00010020, 15
			RightShift a4, a0, 0x08000000, 18
			LeftShift  a4, a0, 0x00020040, 12
			RightShift a4, a0, 0x10000000, 21
			LeftShift  a4, a0, 0x00040080, 9
			RightShift a4, a0, 0x20000000, 24
			LeftShift  a4, a0, 0x00080100, 6
			RightShift a4, a0, 0x40000000, 27
			LeftShift  a4, a0, 0x00100200, 3
			RightShift a4, a0, 0x80000000, 30
			
			xor s1, s1, a4 # add k1||k0 to slice 1

			li t0, 0x00200400
			and a4, a2, t0

			LeftShift  a4, a2, 0x00000001, 30
			RightShift a4, a2, 0x00400800, 3
			LeftShift  a4, a2, 0x00000002, 27
			RightShift a4, a2, 0x00801000, 6
			LeftShift  a4, a2, 0x00000004, 24
			RightShift a4, a2, 0x01002000, 9
			LeftShift  a4, a2, 0x00000008, 21
			RightShift a4, a2, 0x02004000, 12
			LeftShift  a4, a2, 0x00000010, 18
			RightShift a4, a2, 0x04008000, 15
			LeftShift  a4, a2, 0x00010020, 15
			RightShift a4, a2, 0x08000000, 18
			LeftShift  a4, a2, 0x00020040, 12
			RightShift a4, a2, 0x10000000, 21
			LeftShift  a4, a2, 0x00040080, 9
			RightShift a4, a2, 0x20000000, 24
			LeftShift  a4, a2, 0x00080100, 6
			RightShift a4, a2, 0x40000000, 27
			LeftShift  a4, a2, 0x00100200, 3
			RightShift a4, a2, 0x80000000, 30
			xor s2, s2, a4 # add k5||k4 to slice 2 

			lw t0, 0(s4) # load round constant
			xor s3, s3, t0 # apply round constant 

			#---Key Scheduler---
			add s4, s4, 4 # increment round constant
			UpdateKey
			RotateKeys

			#+++SUBROUND 4+++
			SubCells s0, s1, s2, s3

			#---PermBits---
			#-----Slice 0-----
			mv a4, zero
			RightShift a4, s0, 0xc0c0c0c0, 6
			LeftShift a4, s0, 0x3f3f3f3f, 2
			mv s0, a4
			#-----Slice 1-----
			mv a4, zero
			RightShift a4, s1, 0xf0f0f0f0, 4
			LeftShift a4, s1, 0x0f0f0f0f, 4
			mv s1, a4
			#-----Slice 2-----
			mv a4, zero
			RightShift a4, s2, 0xfcfcfcfc, 2
			LeftShift a4, s2, 0x03030303, 6
			mv s2, a4

			#---AddRoundKey---

			Transpose32_4 a4, a0
			mv a5, zero
			RightShift a5, a4, 0xff000000, 24
			RightShift a5, a4, 0x00ff0000, 8
			LeftShift a5, a4, 0x0000ff00, 8
			LeftShift a5, a4, 0x000000ff, 24
			xor s1, s1, a5 # add k1||k0 to slice 1

			Transpose32_4 a4, a2
			mv a5, zero
			RightShift a5, a4, 0xff000000, 24
			RightShift a5, a4, 0x00ff0000, 8
			LeftShift a5, a4, 0x0000ff00, 8
			LeftShift a5, a4, 0x000000ff, 24
			xor s2, s2, a5 # add k5||k4 to slice 2 

			lw t0, 0(s4) # load round constant
			xor s3, s3, t0 # apply round constant 

			#---Key Scheduler---
			add s4, s4, 4 # increment round constant
			UpdateKey
			RotateKeys

			#+++SUBROUND 4+++
			SubCells s0, s1, s2, s3

			#---PermBits---
			#-----Slice 0-----
			li t0, 0xff000000
			and t0, s0, t0
			srl t0, t0, 24
			sll s0, s0, 8
			or s0, s0, t0
			#-----Slice 1-----
			li t0, 0xffff0000
			and t0, s1, t0
			srl t0, t0, 16
			sll s1, s1, 16
			or s1, s1, t0
			#-----Slice 2-----
			and t0, s2, 0x000000ff
			sll t0, t0, 24
			srl s2, s2, 8
			or s2, s2, t0

			#---AddRoundKey---
			xor s1, s1, a0 # add k1||k0 to slice 1
			xor s2, s2, a2 # add k5||k4 to slice 2 

			lw t0, 0(s4) # load round constant
			xor s3, s3, t0 # apply round constant 

			#---Key Scheduler---
			add s4, s4, 4 # increment round constant
			UpdateKey
			RotateKeys

		addi s5, s5, -1
		WHILE: bne zero, s5, DO 

		csrr s10, mcycle # MEASUREMENT
		sub s10, s10, s9

		END: j END


.section .data
	txt2_e: .word 0xaaaaaaaa, 0xcccccccc, 0xf0f0f0f0, 0xff00ff00 
	key2: .word 0xfedcba98, 0x76543210, 0xfedcba98, 0x76543210

	const: .word 0x10000008, 0x80018000, 0x54000002, 0x01010181, 0x8000001f, 0x10888880, 0x6001e000, 0x51500002, 0x03030180, 0x8000002f, 0x10088880, 0x60016000, 0x41500002, 0x03030080, 0x80000027, 0x10008880, 0x4001e000, 0x11500002, 0x03020180, 0x8000002b, 0x10080880, 0x60014000, 0x01400002, 0x02020080, 0x80000021, 0x10000080, 0x0001c000, 0x51000002, 0x03010180, 0x8000002e, 0x10088800, 0x60012000, 0x40500002, 0x01030080, 0x80000006, 0x10008808, 0xc001a000, 0x14500002, 0x01020181, 0x8000001a
